% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rjmcmcMethodsIntern.R
\name{birthMove}
\alias{birthMove}
\title{Birth move}
\usage{
birthMove(paramValues, kValue, muValue, sigmafValue, sigmarValue, deltaValue,
  wValue, dlValue, aValue, dimValue)
}
\arguments{
\item{paramValues}{a \code{list} containing:
\itemize{
    \item startPSF a \code{vector} of positive \code{integer}, the
start position of all the forward reads.
    \item startPSR a \code{vector} of positive \code{integer}, the
start position of all the reverse reads.
    \item kmax a \code{integer} the maximum number of nucleosomes allowed.
    \item lambda a positive \code{numeric}, the theorical mean
of the Poisson distribution.
    \item minReads a \code{integer}, the minimum
number of reads in a potential canditate region.
    \item y a \code{vector} of \code{numeric}, the position of all reads (
including forward and reverse reads).
    \item nr a \code{integer}, the number of reverse reads.
    \item nf a \code{integer}, the number of forward reads.
    \item nbrReads a \code{integer}, the total number of reads (including
forward and reverse reads).
    \item zeta TODO
    \item deltamin TODO
    \item deltamax TODO
    \item minReadPos a \code{numeric}, the minimum position of the reads.
    \item maxReadPos a \code{numeric}, the maximum position of the reads.
    \item nbrIterations a \code{integer}, the number of iterations.
}}

\item{kValue}{a \code{integer}, the number of nucleosomes.}

\item{muValue}{a \code{vector} of \code{numeric} of length
\code{kValue}, the positions of the nucleosomes.}

\item{sigmafValue}{a \code{vector} of \code{numeric} of length
\code{kValue}, the variance of the forward reads for each nucleosome.}

\item{sigmarValue}{a \code{vector} of \code{numeric} of length
\code{kValue}, the variance of the reverse reads for each nucleosome.}

\item{deltaValue}{a \code{vector} of \code{numeric} of length
\code{kValue}, the distance between the maxima of the forward and
reverse reads position densities for each nucleosome.}

\item{wValue}{a \code{vector} of positive \code{numerical} of length
\code{kValue}, the weight for each nucleosome.}

\item{dlValue}{TODO}

\item{aValue}{a \code{vector} of positive \code{numerical} of length
\code{kValue + 1}, TODO}

\item{dimValue}{a \code{vector} of positive \code{numerical} of length
\code{kValue}, the number of reads associated to each nucleosome.}
}
\value{
a \code{list} containing:
\itemize{
    \item k a \code{integer}, the updated number of nucleosomes.
    \item mu a \code{vector} of \code{numeric} of length
\code{k}, the updated positions of the nucleosomes.
    \item sigmaf a \code{vector} of \code{numeric} of length
\code{k}, the updated variance of the forward reads for each nucleosome.
    \item sigmar a \code{vector} of \code{numeric} of length
\code{k}, the updated variance of the reverse reads for each nucleosome.
    \item delta a \code{vector} of \code{numeric} of length
\code{kValue}, the updated distance between the maxima of the forward and
reverse reads position densities for each nucleosome.
    \item w a \code{vector} of positive \code{numerical} of length
\code{k}, the updated weight for each nucleosome.
    \item dl TODO
    \item a a \code{vector} of positive \code{numerical} of length
\code{k + 1}, TODO
    \item dim a \code{vector} of positive \code{numerical} of length
\code{k}, the updated number of reads associated to each nucleosome.
    \item rho a \code{numeric}, the acceptance probability.
}
}
\description{
Attempt to add a component for a new nucleosome.
}
\examples{
## Load dataset
data(reads_demo)

## Create a list containing the mandatory parameters
paramList <- list(kmax = 30L, nf = length(reads_demo$readsForward),
nr = length(reads_demo$readsReverse),
nbrReads = length(reads_demo$readsForward) + length(reads_demo$readsReverse),
zeta = 147, deltamin = 142, deltamax = 142,
minReadPos = min(c(reads_demo$readsReverse, reads_demo$readsForward)),
maxReadPos = max(c(reads_demo$readsReverse, reads_demo$readsForward)),
nbrIterations = 100)

## Create a list containing the mandatory parameters
rjmcmc:::birthMove(paramValues = paramList, kValue = 1L,
muValue = c(73000), sigmafValue = c(100), sigmarValue = c(120),
deltaValue, wValue = c(1), dlValue = c(3),
aValue = c(min(c(reads_demo$readsReverse, reads_demo$readsForward)),
max(c(reads_demo$readsReverse, reads_demo$readsForward))),
dimValue = c(length(reads_demo$readsForward) +
length(reads_demo$readsReverse)))
}
\author{
Rawane Samb, Pascal Belleau, Astrid Deschenes
}
\keyword{internal}

